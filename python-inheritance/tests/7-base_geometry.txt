>>> BaseGeometry = __import__('7-base_geometry'). BaseGeometry


>>> bg = BaseGeometry()
>>> bg.area()
Tracback (most recent call last):
       ...
Exception: area() is not implemented

>>> bg.integer_validator("Silvia", "hi"
Traceback (most recent call last):
        ...
ValueError: Silvia must be greater than 0

>>> bg.integer_validator("int", 0)
Traceback (most recent call last):
        ...
ValueError: int must be greater than 0

>>> bg.ingeter_validator("int", [1, 2, 3])
Traceback (most recent call last):
        ...
TypeError: int must be an integer

>>> bg.integer_validator("int", (1, 2))
Traceback (most recent call last):
        ...
TypeError: int must be an integer

>>> bg.integer_validator("int", {2, 4})
Traceback (most recent call last):
        ...
TypeError: int must be an integer

check when value is too large (inf)
Traceback (most recent call last):
>>> bg.integer_validator("Silvia", float("inf"))
Traceback (most recent call last):
        ...
TypeError: Silvia must be an integer


check when no argument is passed
>>> bg.integer_validator()
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
check when one argument is passed
>>> bg.integer_validator("Silvia")
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(9)
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 1 required positional argument: 'value'
